{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TouchableOpacityBase } from \"react-native-web/dist/index\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth, provider } from \"../firebase-config\";\nexport var LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      errorMessage: null\n    };\n\n    _this.handleLogin = function _callee(email, password) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              signInWithEmailAndPassword(auth, email, password);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(View, null, this.state.errorMessage && React.createElement(Text, {\n        style: StyleSheet.error\n      }, this.state.errorMessage)), React.createElement(\"br\", null), React.createElement(View, {\n        style: {\n          alignItems: \"left\",\n          justifyContent: \"center\"\n        }\n      }, React.createElement(Text, null, \"Email :\"), React.createElement(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        value: this.state.email\n      })), React.createElement(\"br\", null), React.createElement(View, {\n        style: {\n          alignItems: \"left\",\n          justifyContent: \"center\"\n        }\n      }, React.createElement(Text, null, \"Password :\"), React.createElement(TextInput, {\n        style: styles.input,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        value: this.state.password\n      })), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.handleLogin\n      }, React.createElement(Text, {\n        style: {\n          color: '#FFFFFF',\n          fontWeight: 700,\n          fontSize: 24\n        }\n      }, \"Login\")), React.createElement(\"br\", null), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"Register\");\n        },\n        style: {\n          textAlign: \"center\"\n        }\n      }, React.createElement(Text, null, \"\\u0E22\\u0E31\\u0E07\\u0E44\\u0E21\\u0E48\\u0E21\\u0E35\\u0E1A\\u0E31\\u0E0D\\u0E0A\\u0E35? \", React.createElement(Text, {\n        style: {\n          color: '#999',\n          fontWeight: 700\n        }\n      }, \"Singup\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginHorizontal: 50\n  },\n  error: {\n    color: \"#E9446A\",\n    textAlign: \"center\"\n  },\n  input: {\n    borderBottomColor: \"#8A8F9E\",\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    height: 40,\n    fontSize: 15,\n    color: \"#161F3D\"\n  },\n  button: {\n    marginHorizontal: 50,\n    backgroundColor: \"#3260a8\",\n    borderRadius: 10,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 30\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","Component","TouchableOpacityBase","signInWithEmailAndPassword","auth","provider","LoginScreen","state","email","password","errorMessage","handleLogin","styles","container","StyleSheet","error","alignItems","justifyContent","input","setState","button","color","fontWeight","fontSize","props","navigation","navigate","textAlign","create","flex","marginHorizontal","borderBottomColor","borderBottomWidth","hairlineWidth","height","backgroundColor","borderRadius","marginTop"],"sources":["D:/work/AppTest/expo5/screens/LoginScreen.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Text, View, StyleSheet, TextInput, TouchableOpacity, TouchableOpacityBase } from 'react-native'\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth, provider } from \"../firebase-config\";\r\n\r\nexport class LoginScreen extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        errorMessage: null\r\n    };\r\n\r\n    handleLogin = async (email, password) => {\r\n        signInWithEmailAndPassword(auth, email, password)\r\n          /* .then((userCredential) => {\r\n            // Signed in \r\n            const user = userCredential.user;\r\n            // ...\r\n          })\r\n          .catch((error) => {\r\n            const errorCode = error.code;\r\n            const errorMessage = error.message;\r\n          }); */\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                {/* <Text style={{ textAlign: \"center\" }}><h1>สวัสดีครับ</h1></Text> */}\r\n\r\n                <View>\r\n                    {this.state.errorMessage && <Text style={StyleSheet.error}>{this.state.errorMessage}</Text>}\r\n                </View><br />\r\n\r\n                <View style={{ alignItems: \"left\", justifyContent: \"center\" }}>\r\n                    <Text>Email :</Text>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        onChangeText={email => this.setState({ email })}\r\n                        value={this.state.email} />\r\n                </View><br />\r\n\r\n                <View style={{ alignItems: \"left\", justifyContent: \"center\" }}>\r\n                    <Text>Password :</Text>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        secureTextEntry\r\n                        onChangeText={password => this.setState({ password })}\r\n                        value={this.state.password} />\r\n                </View><br /><br /><br />\r\n\r\n                <TouchableOpacity style={styles.button} onPress={this.handleLogin}>\r\n                    <Text style={{ color: '#FFFFFF', fontWeight: 700, fontSize: 24 }} >Login</Text>\r\n                </TouchableOpacity><br />\r\n\r\n                <TouchableOpacity onPress={() => this.props.navigation.navigate(\"Register\")}\r\n                    style={{ textAlign: \"center\" }}>\r\n                    <Text>ยังไม่มีบัญชี? <Text style={{ color: '#999', fontWeight: 700 }}>Singup</Text></Text>\r\n                </TouchableOpacity>\r\n\r\n\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginHorizontal: 50,\r\n    },\r\n    error: {\r\n        color: \"#E9446A\",\r\n        textAlign: \"center\",\r\n    },\r\n    input: {\r\n        borderBottomColor: \"#8A8F9E\",\r\n        borderBottomWidth: StyleSheet.hairlineWidth,\r\n        height: 40,\r\n        fontSize: 15,\r\n        color: \"#161F3D\"\r\n    },\r\n    button: {\r\n        marginHorizontal: 50,\r\n        backgroundColor: \"#3260a8\",\r\n        borderRadius: 10,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 30,\r\n    }\r\n})\r\n\r\nexport default LoginScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}