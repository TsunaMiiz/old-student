{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"firebase/compat/app\";\n\nvar Fire = function () {\n  function Fire() {\n    var _this = this;\n\n    _classCallCheck(this, Fire);\n\n    this.uploadPhotoAsync = function (uri, filename) {\n      return new Promise(function _callee2(res, rej) {\n        var response, file, upload;\n        return _regeneratorRuntime.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(fetch(uri));\n\n              case 2:\n                response = _context2.sent;\n                _context2.next = 5;\n                return _regeneratorRuntime.awrap(response.blob());\n\n              case 5:\n                file = _context2.sent;\n                upload = firebase.storage().ref(filename).put(file);\n                upload.on(\"state_changed\", function (snapshot) {}, function (err) {\n                  rej(err);\n                }, function _callee() {\n                  var url;\n                  return _regeneratorRuntime.async(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _regeneratorRuntime.awrap(upload.snapshot.ref.getDownloadURL());\n\n                        case 2:\n                          url = _context.sent;\n                          res(url);\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    };\n\n    this.createUser = function _callee3(user) {\n      var remoteUri, db;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              remoteUri = null;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(user.email, user.password));\n\n            case 4:\n              db = _this.firestore.collection(\"users\").doc(_this.uid);\n              db.set({\n                name: user.name,\n                email: user.email,\n                avatar: null\n              });\n\n              if (!user.avatar) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(_this.uploadPhotoAsync(user.avatar, \"avatars/\" + _this.uid));\n\n            case 9:\n              remoteUri = _context3.sent;\n              db.set({\n                avatar: remoteUri\n              }, {\n                merge: true\n              });\n\n            case 11:\n              _context3.next = 16;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](1);\n              alert(\"Error: \", _context3.t0);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 13]], Promise);\n    };\n\n    this.signOutUser = function () {\n      firebase.auth().signOut();\n    };\n\n    this.addPost = function _callee4(_ref) {\n      var text, localUri, remoteUri;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              text = _ref.text, localUri = _ref.localUri;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(_this.uploadPhotoAsync(localUri, \"photos/\" + _this.uid + \"/\" + Date.now()));\n\n            case 3:\n              remoteUri = _context4.sent;\n              return _context4.abrupt(\"return\", new Promise(function (res, rej) {\n                _this.firestore.collection(\"posts\").add({\n                  text: text,\n                  uid: _this.uid,\n                  name: _this.name,\n                  timestamp: _this.timestamp,\n                  image: remoteUri\n                }).then(function (ref) {\n                  res(ref);\n                }).catch(function (error) {\n                  rej(error);\n                });\n              }));\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.getPost = function _callee5(_ref2) {\n      var text;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              text = _ref2.text;\n              return _context5.abrupt(\"return\", new Promise(function (res, rej) {\n                _this.firestore.collection(\"posts\").snapshot({\n                  text: text,\n                  uid: \"\",\n                  name: \"\",\n                  timestamp: \"\",\n                  image: \"\"\n                }).then(function (ref) {\n                  res(ref);\n                }).catch(function (error) {\n                  rej(error);\n                });\n              }));\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n  }\n\n  _createClass(Fire, [{\n    key: \"collection\",\n    get: function get() {\n      return firebase.firestore().collection(collectionName);\n    }\n  }, {\n    key: \"firestore\",\n    get: function get() {\n      return firebase.firestore();\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return (firebase.auth().currentUser || {}).uid;\n    }\n  }, {\n    key: \"timestamp\",\n    get: function get() {\n      return Date.now();\n    }\n  }]);\n\n  return Fire;\n}();\n\nFire.shared = new Fire();\nexport default Fire;","map":{"version":3,"names":["firebase","Fire","uploadPhotoAsync","uri","filename","Promise","res","rej","fetch","response","blob","file","upload","storage","ref","put","on","snapshot","err","getDownloadURL","url","createUser","user","remoteUri","createUserWithEmailAndPassword","email","password","db","firestore","collection","doc","uid","set","name","avatar","merge","alert","signOutUser","auth","signOut","addPost","text","localUri","Date","now","add","timestamp","image","then","catch","error","getPost","collectionName","currentUser","shared"],"sources":["D:/work/AppTest/expo5/Fire.js"],"sourcesContent":["import firebase from \"firebase/compat/app\";\r\n\r\nclass Fire {\r\n\r\n    uploadPhotoAsync = (uri, filename)=> {\r\n        // const path = `photos/${this.uid}/${Date.now()}.jpg`;\r\n         return new Promise(async (res, rej) => {\r\n             const response = await fetch(uri);\r\n             const file = await response.blob();\r\n             let upload = firebase\r\n                 .storage()\r\n                 .ref(filename)\r\n                 .put(file);\r\n             upload.on(\r\n                 \"state_changed\",\r\n                 snapshot => {},\r\n                 err => {\r\n                     rej(err);\r\n                 },\r\n                 async () => {\r\n                     const url = await upload.snapshot.ref.getDownloadURL();\r\n                     res(url);\r\n                 }\r\n             );\r\n         });\r\n     };\r\n\r\n    createUser = async user => {\r\n        let remoteUri = null;\r\n        try {\r\n            await createUserWithEmailAndPassword(user.email, user.password);\r\n            let db = this.firestore.collection(\"users\").doc(this.uid);\r\n            db.set({\r\n                name: user.name,\r\n                email: user.email,\r\n                avatar: null\r\n            });\r\n\r\n            if (user.avatar) {\r\n                remoteUri = await this.uploadPhotoAsync(user.avatar, `avatars/${this.uid}`);\r\n                db.set({ avatar: remoteUri }, { merge: true });\r\n            }\r\n        } catch (error) {\r\n            alert(\"Error: \", error);\r\n        }\r\n    };\r\n\r\n    signOutUser = () => {\r\n        firebase.auth().signOut();\r\n    };\r\n\r\n    get collection() {\r\n        return firebase.firestore().collection(collectionName);\r\n    };\r\n    \r\n    get firestore() {\r\n        return firebase.firestore();\r\n    };\r\n\r\n    get uid() {\r\n        return (firebase.auth().currentUser || {}).uid;\r\n    };\r\n\r\n    get timestamp() {\r\n        return Date.now();\r\n    };\r\n    \r\n    addPost = async ({ text, localUri }) => {\r\n        //const remoteUri = await this.uploadPhotoAsync(localUri);\r\n        const remoteUri = await this.uploadPhotoAsync(localUri, `photos/${this.uid}/${Date.now()}`);\r\n\r\n        return new Promise((res, rej) => {\r\n            this.firestore\r\n                .collection(\"posts\")\r\n                .add({\r\n                    text,\r\n                    uid: this.uid,\r\n                    name: this.name,\r\n                    timestamp: this.timestamp,\r\n                    image: remoteUri\r\n                })\r\n                .then(ref => {\r\n                    res(ref);\r\n                })\r\n                .catch(error => {\r\n                    rej(error);\r\n                });\r\n        });\r\n    };\r\n\r\n    getPost = async ({ text }) => {\r\n        return new Promise((res, rej) => {\r\n            this.firestore\r\n                .collection(\"posts\")\r\n                .snapshot({\r\n                    text,\r\n                    uid: \"\",\r\n                    name: \"\",\r\n                    timestamp: \"\",\r\n                    image: \"\"\r\n                })\r\n                .then(ref => {\r\n                    res(ref);\r\n                })\r\n                .catch(error => {\r\n                    rej(error);\r\n                });\r\n        });\r\n    };\r\n\r\n}\r\n\r\n\r\nFire.shared = new Fire();\r\nexport default Fire;"],"mappings":"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"},"metadata":{},"sourceType":"module"}