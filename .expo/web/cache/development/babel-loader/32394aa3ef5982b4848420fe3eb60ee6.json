{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"firebase\";\nimport { initializeApp } from 'firebase/firestore';\nimport { getFirestore } from 'firebase/firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCZc_ysOJDFr5yyKJpzDZP27ZLTtcfJoxI\",\n  authDomain: \"oldstudentapp.firebaseapp.com\",\n  databaseURL: \"https://oldstudentapp-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"oldstudentapp\",\n  storageBucket: \"oldstudentapp.appspot.com\",\n  messagingSenderId: \"252968528266\",\n  appId: \"1:252968528266:web:34816b44754ad802c28073\",\n  measurementId: \"G-025HR8W0J7\"\n};\n\nvar Fire = function () {\n  function Fire() {\n    var _this = this;\n\n    _classCallCheck(this, Fire);\n\n    this.uploadPhotoAsync = function (uri, filename) {\n      return new Promise(function _callee2(res, rej) {\n        var response, file, upload;\n        return _regeneratorRuntime.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(fetch(uri));\n\n              case 2:\n                response = _context2.sent;\n                _context2.next = 5;\n                return _regeneratorRuntime.awrap(response.blob());\n\n              case 5:\n                file = _context2.sent;\n                upload = firebase.storage().ref(filename).put(file);\n                upload.on(\"state_changed\", function (snapshot) {}, function (err) {\n                  rej(err);\n                }, function _callee() {\n                  var url;\n                  return _regeneratorRuntime.async(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _regeneratorRuntime.awrap(upload.snapshot.ref.getDownloadURL());\n\n                        case 2:\n                          url = _context.sent;\n                          res(url);\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    };\n\n    this.createUser = function _callee3(user) {\n      var remoteUri, _db;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              remoteUri = null;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(user.email, user.password));\n\n            case 4:\n              _db = _this.firestore.collection(\"users\").doc(_this.uid);\n\n              _db.set({\n                name: user.name,\n                email: user.email,\n                avatar: null\n              });\n\n              if (!user.avatar) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(_this.uploadPhotoAsync(user.avatar, \"avatars/\" + _this.uid));\n\n            case 9:\n              remoteUri = _context3.sent;\n\n              _db.set({\n                avatar: remoteUri\n              }, {\n                merge: true\n              });\n\n            case 11:\n              _context3.next = 16;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](1);\n              alert(\"Error: \", _context3.t0);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 13]], Promise);\n    };\n\n    this.signOutUser = function () {\n      firebase.auth().signOut();\n    };\n\n    this.addPost = function _callee4(_ref) {\n      var text, localUri, remoteUri;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              text = _ref.text, localUri = _ref.localUri;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(_this.uploadPhotoAsync(localUri, \"photos/\" + _this.uid + \"/\" + Date.now()));\n\n            case 3:\n              remoteUri = _context4.sent;\n              return _context4.abrupt(\"return\", new Promise(function (res, rej) {\n                _this.firestore.collection(\"posts\").add({\n                  text: text,\n                  uid: _this.uid,\n                  timestamp: _this.timestamp,\n                  image: remoteUri\n                }).then(function (ref) {\n                  res(ref);\n                }).catch(function (error) {\n                  rej(error);\n                });\n              }));\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.getPaged = function _callee5(_ref2) {\n      var size, start, ref, querySnapshot, data, lastVisible, message;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              size = _ref2.size, start = _ref2.start;\n              ref = _this.collection.orderBy('timestamp', 'desc').limit(size);\n              _context5.prev = 2;\n\n              if (start) {\n                ref = ref.startAfter(start);\n              }\n\n              _context5.next = 6;\n              return _regeneratorRuntime.awrap(ref.get());\n\n            case 6:\n              querySnapshot = _context5.sent;\n              data = [];\n              querySnapshot.forEach(function (doc) {\n                if (doc.exists) {\n                  var post = doc.data() || {};\n                  var user = post.user || {};\n                  var name = user.username;\n\n                  var reduced = _objectSpread({\n                    key: doc.id,\n                    name: (name || 'Secret Duck').trim()\n                  }, post);\n\n                  data.push(reduced);\n                }\n              });\n              lastVisible = querySnapshot.docs[querySnapshot.docs.length - 1];\n              return _context5.abrupt(\"return\", {\n                data: data,\n                cursor: lastVisible\n              });\n\n            case 13:\n              _context5.prev = 13;\n              _context5.t0 = _context5[\"catch\"](2);\n              message = _context5.t0.message;\n              alert(message);\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, [[2, 13]], Promise);\n    };\n  }\n\n  _createClass(Fire, [{\n    key: \"collection\",\n    get: function get() {\n      return firebase.firestore().collection(collectionName);\n    }\n  }, {\n    key: \"firestore\",\n    get: function get() {\n      return firebase.firestore();\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return (firebase.auth().currentUser || {}).uid;\n    }\n  }, {\n    key: \"timestamp\",\n    get: function get() {\n      return Date.now();\n    }\n  }]);\n\n  return Fire;\n}();\n\nFire.shared = new Fire();\nexport default Fire;\nexport var db = getFirestore();\nexport var app = initializeApp(firebaseConfig);","map":{"version":3,"names":["firebase","initializeApp","getFirestore","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Fire","uploadPhotoAsync","uri","filename","Promise","res","rej","fetch","response","blob","file","upload","storage","ref","put","on","snapshot","err","getDownloadURL","url","createUser","user","remoteUri","auth","createUserWithEmailAndPassword","email","password","db","firestore","collection","doc","uid","set","name","avatar","merge","alert","signOutUser","signOut","addPost","text","localUri","Date","now","add","timestamp","image","then","catch","error","getPaged","size","start","orderBy","limit","startAfter","get","querySnapshot","data","forEach","exists","post","username","reduced","key","id","trim","push","lastVisible","docs","length","cursor","message","collectionName","currentUser","shared","app"],"sources":["D:/work/AppTest/expo5/Fire.js"],"sourcesContent":["import firebase from \"firebase\";\r\nimport { initializeApp } from 'firebase/firestore'\r\nimport { getFirestore } from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCZc_ysOJDFr5yyKJpzDZP27ZLTtcfJoxI\",\r\n    authDomain: \"oldstudentapp.firebaseapp.com\",\r\n    databaseURL: \"https://oldstudentapp-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n    projectId: \"oldstudentapp\",\r\n    storageBucket: \"oldstudentapp.appspot.com\",\r\n    messagingSenderId: \"252968528266\",\r\n    appId: \"1:252968528266:web:34816b44754ad802c28073\",\r\n    measurementId: \"G-025HR8W0J7\"\r\n  };\r\n\r\nclass Fire {\r\n\r\n    uploadPhotoAsync = (uri, filename)=> {\r\n        // const path = `photos/${this.uid}/${Date.now()}.jpg`;\r\n         return new Promise(async (res, rej) => {\r\n             const response = await fetch(uri);\r\n             const file = await response.blob();\r\n             let upload = firebase\r\n                 .storage()\r\n                 .ref(filename)\r\n                 .put(file);\r\n             upload.on(\r\n                 \"state_changed\",\r\n                 snapshot => {},\r\n                 err => {\r\n                     rej(err);\r\n                 },\r\n                 async () => {\r\n                     const url = await upload.snapshot.ref.getDownloadURL();\r\n                     res(url);\r\n                 }\r\n             );\r\n         });\r\n     };\r\n\r\n    createUser = async user => {\r\n        let remoteUri = null;\r\n        try {\r\n            await firebase.auth().createUserWithEmailAndPassword(user.email, user.password);\r\n            let db = this.firestore.collection(\"users\").doc(this.uid);\r\n            db.set({\r\n                name: user.name,\r\n                email: user.email,\r\n                avatar: null\r\n            });\r\n\r\n            if (user.avatar) {\r\n                remoteUri = await this.uploadPhotoAsync(user.avatar, `avatars/${this.uid}`);\r\n                db.set({ avatar: remoteUri }, { merge: true });\r\n            }\r\n        } catch (error) {\r\n            alert(\"Error: \", error);\r\n        }\r\n    };\r\n\r\n    signOutUser = () => {\r\n        firebase.auth().signOut();\r\n    };\r\n\r\n    get collection() {\r\n        return firebase.firestore().collection(collectionName);\r\n    };\r\n    \r\n    get firestore() {\r\n        return firebase.firestore();\r\n    };\r\n\r\n    get uid() {\r\n        return (firebase.auth().currentUser || {}).uid;\r\n    };\r\n\r\n    get timestamp() {\r\n        return Date.now();\r\n    };\r\n    \r\n    addPost = async ({ text, localUri }) => {\r\n        //const remoteUri = await this.uploadPhotoAsync(localUri);\r\n        const remoteUri = await this.uploadPhotoAsync(localUri, `photos/${this.uid}/${Date.now()}`);\r\n\r\n        return new Promise((res, rej) => {\r\n            this.firestore\r\n                .collection(\"posts\")\r\n                .add({\r\n                    text,\r\n                    uid: this.uid,\r\n                    timestamp: this.timestamp,\r\n                    image: remoteUri\r\n                })\r\n                .then(ref => {\r\n                    res(ref);\r\n                })\r\n                .catch(error => {\r\n                    rej(error);\r\n                });\r\n        });\r\n    };\r\n\r\n    getPaged = async ({ size, start }) => {\r\n        let ref = this.collection.orderBy('timestamp', 'desc').limit(size);\r\n        try {\r\n          if (start) {\r\n            ref = ref.startAfter(start);\r\n          }\r\n    \r\n          const querySnapshot = await ref.get();\r\n          const data = [];\r\n          querySnapshot.forEach(function(doc) {\r\n            if (doc.exists) {\r\n              const post = doc.data() || {};\r\n    \r\n              // Reduce the name\r\n              const user = post.user || {};\r\n    \r\n              const name = user.username;\r\n              const reduced = {\r\n                key: doc.id,\r\n                name: (name || 'Secret Duck').trim(),\r\n                ...post,\r\n              };\r\n              data.push(reduced);\r\n            }\r\n          });\r\n    \r\n          const lastVisible = querySnapshot.docs[querySnapshot.docs.length - 1];\r\n          return { data, cursor: lastVisible };\r\n        } catch ({ message }) {\r\n          alert(message);\r\n        }\r\n      };\r\n\r\n}\r\n\r\n\r\nFire.shared = new Fire();\r\nexport default Fire;\r\n\r\nexport const db = getFirestore();\r\nexport const app = initializeApp(firebaseConfig);"],"mappings":"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"},"metadata":{},"sourceType":"module"}