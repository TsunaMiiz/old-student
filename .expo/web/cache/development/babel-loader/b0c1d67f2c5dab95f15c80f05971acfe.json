{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { auth, provider } from \"../firebase-config\";\nimport { signInWithPopup, signInWithEmailAndPassword } from \"firebase/auth\";\n\nvar LoginScreen = function (_Rewact$Component) {\n  _inherits(LoginScreen, _Rewact$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    _classCallCheck(this, LoginScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      state = {\n        email: \"\",\n        password: \"\",\n        Firstname: \"\",\n        Lastname: \"\",\n        errorMessage: null\n      };\n\n      var handleLogin = function handleLogin(email, password) {\n        return _regeneratorRuntime.async(function handleLogin$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(signInWithEmailAndPassword(auth, email, password));\n\n              case 3:\n                localStorage.setItem(\"isAuth\", true);\n                setIsAuth(true);\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                alert(_context.t0.message);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 7]], Promise);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.container\n      }, React.createElement(View, null, this.state.errorMessage && React.createElement(Text, {\n        style: StyleSheet.error\n      }, this.state.errorMessage)), React.createElement(\"br\", null), React.createElement(View, {\n        style: {\n          alignItems: \"left\",\n          justifyContent: \"center\"\n        }\n      }, React.createElement(Text, null, \"Email :\"), React.createElement(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(email) {\n          return _this.setState({\n            email: email\n          });\n        },\n        value: this.state.email\n      })), React.createElement(\"br\", null), React.createElement(View, {\n        style: {\n          alignItems: \"left\",\n          justifyContent: \"center\"\n        }\n      }, React.createElement(Text, null, \"Password :\"), React.createElement(TextInput, {\n        style: styles.input,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this.setState({\n            password: password\n          });\n        },\n        value: this.state.password\n      })), React.createElement(\"br\", null), React.createElement(View, {\n        style: {\n          alignItems: \"left\",\n          justifyContent: \"center\"\n        }\n      }, React.createElement(Text, null, \"Firstname :\"), React.createElement(TextInput, {\n        style: styles.input,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(Firstname) {\n          return _this.setState({\n            Firstname: Firstname\n          });\n        },\n        value: this.state.Firstname\n      })), React.createElement(\"br\", null), React.createElement(View, {\n        style: {\n          alignItems: \"left\",\n          justifyContent: \"center\"\n        }\n      }, React.createElement(Text, null, \"Lastname :\"), React.createElement(TextInput, {\n        style: styles.input,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(Lastname) {\n          return _this.setState({\n            Lastname: Lastname\n          });\n        },\n        value: this.state.Lastname\n      })), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(\"br\", null), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleLogin\n      }, React.createElement(Text, {\n        style: {\n          color: '#FFFFFF',\n          fontWeight: 700,\n          fontSize: 24\n        }\n      }, \"Login\")), React.createElement(\"br\", null), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.props.navigation.navigate(\"Register\");\n        },\n        style: {\n          textAlign: \"center\"\n        }\n      }, React.createElement(Text, null, \"\\u0E22\\u0E31\\u0E07\\u0E44\\u0E21\\u0E48\\u0E21\\u0E35\\u0E1A\\u0E31\\u0E0D\\u0E0A\\u0E35? \", React.createElement(Text, {\n        style: {\n          color: '#999',\n          fontWeight: 700\n        }\n      }, \"Singup\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(Rewact.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginHorizontal: 50\n  },\n  error: {\n    color: \"#E9446A\",\n    textAlign: \"center\"\n  },\n  input: {\n    borderBottomColor: \"#8A8F9E\",\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    height: 40,\n    fontSize: 15,\n    color: \"#161F3D\"\n  },\n  button: {\n    marginHorizontal: 50,\n    backgroundColor: \"#3260a8\",\n    borderRadius: 10,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 30\n  }\n});","map":{"version":3,"names":["React","useState","Component","auth","provider","signInWithPopup","signInWithEmailAndPassword","LoginScreen","state","email","password","Firstname","Lastname","errorMessage","handleLogin","localStorage","setItem","setIsAuth","console","error","alert","message","styles","container","StyleSheet","alignItems","justifyContent","input","setState","button","color","fontWeight","fontSize","props","navigation","navigate","textAlign","Rewact","create","flex","marginHorizontal","borderBottomColor","borderBottomWidth","hairlineWidth","height","backgroundColor","borderRadius","marginTop"],"sources":["D:/work/AppTest/expo5/screens/LoginScreen.js"],"sourcesContent":["import React, { useState, Component } from 'react'\r\nimport { Text, View, StyleSheet, TextInput, TouchableOpacity } from 'react-native'\r\nimport { auth, provider } from \"../firebase-config\";\r\nimport { signInWithPopup, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nexport default class LoginScreen extends Rewact.Component {\r\n    componentDidMount() {\r\n        state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            Firstname: \"\",\r\n            Lastname: \"\",\r\n            errorMessage: null\r\n        }\r\n\r\n        //let navigate = useNavigate();\r\n\r\n        const handleLogin = async (email, password) => {\r\n            try {\r\n                await signInWithEmailAndPassword(auth, email, password);\r\n                localStorage.setItem(\"isAuth\", true);\r\n                setIsAuth(true);\r\n                //navigate(\"/\");\r\n            } catch (err) {\r\n                console.error(err);\r\n                alert(err.message);\r\n            }\r\n        };\r\n    }\r\n\r\n        /* const signInWithGoogle = () => {\r\n            signInWithPopup(auth, provider).then((result) => {\r\n              localStorage.setItem(\"isAuth\", true);\r\n              setIsAuth(true);\r\n              navigate(\"/\");\r\n            });\r\n          }; */\r\n        render() {\r\n            return (\r\n                <View style={styles.container}>\r\n                    {/* <Text style={{ textAlign: \"center\" }}><h1>สวัสดีครับ</h1></Text> */}\r\n\r\n                    <View>\r\n                        {this.state.errorMessage && <Text style={StyleSheet.error}>{this.state.errorMessage}</Text>}\r\n                    </View><br />\r\n\r\n                    <View style={{ alignItems: \"left\", justifyContent: \"center\" }}>\r\n                        <Text>Email :</Text>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            onChangeText={email => this.setState({ email })}\r\n                            value={this.state.email} />\r\n                    </View><br />\r\n\r\n                    <View style={{ alignItems: \"left\", justifyContent: \"center\" }}>\r\n                        <Text>Password :</Text>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            secureTextEntry\r\n                            onChangeText={password => this.setState({ password })}\r\n                            value={this.state.password} />\r\n                    </View><br />\r\n\r\n                    <View style={{ alignItems: \"left\", justifyContent: \"center\" }}>\r\n                        <Text>Firstname :</Text>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            secureTextEntry\r\n                            onChangeText={Firstname => this.setState({ Firstname })}\r\n                            value={this.state.Firstname} />\r\n                    </View><br />\r\n\r\n                    <View style={{ alignItems: \"left\", justifyContent: \"center\" }}>\r\n                        <Text>Lastname :</Text>\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            secureTextEntry\r\n                            onChangeText={Lastname => this.setState({ Lastname })}\r\n                            value={this.state.Lastname} />\r\n                    </View><br /><br /><br />\r\n\r\n                    <TouchableOpacity style={styles.button} onPress={handleLogin}>\r\n                        <Text style={{ color: '#FFFFFF', fontWeight: 700, fontSize: 24 }} >Login</Text>\r\n                    </TouchableOpacity><br />\r\n\r\n                    <TouchableOpacity onPress={() => this.props.navigation.navigate(\"Register\")}\r\n                        style={{ textAlign: \"center\" }}>\r\n                        <Text>ยังไม่มีบัญชี? <Text style={{ color: '#999', fontWeight: 700 }}>Singup</Text></Text>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                </View>\r\n            )\r\n        }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginHorizontal: 50,\r\n    },\r\n    error: {\r\n        color: \"#E9446A\",\r\n        textAlign: \"center\",\r\n    },\r\n    input: {\r\n        borderBottomColor: \"#8A8F9E\",\r\n        borderBottomWidth: StyleSheet.hairlineWidth,\r\n        height: 40,\r\n        fontSize: 15,\r\n        color: \"#161F3D\"\r\n    },\r\n    button: {\r\n        marginHorizontal: 50,\r\n        backgroundColor: \"#3260a8\",\r\n        borderRadius: 10,\r\n        height: 50,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 30,\r\n    }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}