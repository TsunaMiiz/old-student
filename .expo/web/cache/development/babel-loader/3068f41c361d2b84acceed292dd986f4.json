{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\n\nvar Fire = function Fire() {\n  var _this = this;\n\n  _classCallCheck(this, Fire);\n\n  this.uploadPhotoAsync = function (uri, filename) {\n    return new Promise(function _callee2(res, rej) {\n      var response, file, upload;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetch(uri));\n\n            case 2:\n              response = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(response.blob());\n\n            case 5:\n              file = _context2.sent;\n              upload = firebase.storage().ref(filename).put(file);\n              upload.on(\"state_changed\", function (snapshot) {}, function (err) {\n                rej(err);\n              }, function _callee() {\n                var url;\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _regeneratorRuntime.awrap(upload.snapshot.ref.getDownloadURL());\n\n                      case 2:\n                        url = _context.sent;\n                        res(url);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  };\n\n  this.createUser = function _callee3(user) {\n    var remoteUri, db;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            remoteUri = null;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(createUserWithEmailAndPassword(user.email, user.password));\n\n          case 4:\n            db = _this.firestore.collection(\"users\").doc(_this.uid);\n            db.set({\n              name: user.name,\n              email: user.email,\n              avatar: null\n            });\n\n            if (!user.avatar) {\n              _context3.next = 11;\n              break;\n            }\n\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(_this.uploadPhotoAsync(user.avatar, \"avatars/\" + _this.uid));\n\n          case 9:\n            remoteUri = _context3.sent;\n            db.set({\n              avatar: remoteUri\n            }, {\n              merge: true\n            });\n\n          case 11:\n            _context3.next = 16;\n            break;\n\n          case 13:\n            _context3.prev = 13;\n            _context3.t0 = _context3[\"catch\"](1);\n            alert(\"Error: \", _context3.t0);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 13]], Promise);\n  };\n\n  this.addPost = function _callee4(_ref) {\n    var text, localUri, remoteUri;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            text = _ref.text, localUri = _ref.localUri;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(_this.uploadPhotoAsync(localUri, \"photos/\" + _this.uid + \"/\" + Date.now()));\n\n          case 3:\n            remoteUri = _context4.sent;\n            return _context4.abrupt(\"return\", new Promise(function (res, rej) {\n              _this.firestore.collection(\"posts\").add({\n                text: text,\n                uid: _this.uid,\n                name: _this.name,\n                timestamp: _this.timestamp,\n                image: remoteUri\n              }).then(function (ref) {\n                res(ref);\n              }).catch(function (error) {\n                rej(error);\n              });\n            }));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  this.getPost = function _callee5(_ref2) {\n    var text;\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            text = _ref2.text;\n            return _context5.abrupt(\"return\", new Promise(function (res, rej) {\n              _this.firestore.collection(\"posts\").snapshot({\n                text: text,\n                uid: \"\",\n                name: \"\",\n                timestamp: \"\",\n                image: \"\"\n              }).then(function (ref) {\n                res(ref);\n              }).catch(function (error) {\n                rej(error);\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nFire.shared = new Fire();\nexport default Fire;","map":{"version":3,"names":["createUserWithEmailAndPassword","Fire","uploadPhotoAsync","uri","filename","Promise","res","rej","fetch","response","blob","file","upload","firebase","storage","ref","put","on","snapshot","err","getDownloadURL","url","createUser","user","remoteUri","email","password","db","firestore","collection","doc","uid","set","name","avatar","merge","alert","addPost","text","localUri","Date","now","add","timestamp","image","then","catch","error","getPost","shared"],"sources":["D:/work/AppTest/expo5/Fire.js"],"sourcesContent":["import { createUserWithEmailAndPassword } from 'firebase/auth'\r\n\r\nclass Fire {\r\n\r\n    uploadPhotoAsync = (uri, filename)=> {\r\n        // const path = `photos/${this.uid}/${Date.now()}.jpg`;\r\n         return new Promise(async (res, rej) => {\r\n             const response = await fetch(uri);\r\n             const file = await response.blob();\r\n             let upload = firebase\r\n                 .storage()\r\n                 .ref(filename)\r\n                 .put(file);\r\n             upload.on(\r\n                 \"state_changed\",\r\n                 snapshot => {},\r\n                 err => {\r\n                     rej(err);\r\n                 },\r\n                 async () => {\r\n                     const url = await upload.snapshot.ref.getDownloadURL();\r\n                     res(url);\r\n                 }\r\n             );\r\n         });\r\n     };\r\n\r\n    createUser = async user => {\r\n        let remoteUri = null;\r\n        try {\r\n            await createUserWithEmailAndPassword(user.email, user.password);\r\n            let db = this.firestore.collection(\"users\").doc(this.uid);\r\n            db.set({\r\n                name: user.name,\r\n                email: user.email,\r\n                avatar: null\r\n            });\r\n\r\n            if (user.avatar) {\r\n                remoteUri = await this.uploadPhotoAsync(user.avatar, `avatars/${this.uid}`);\r\n                db.set({ avatar: remoteUri }, { merge: true });\r\n            }\r\n        } catch (error) {\r\n            alert(\"Error: \", error);\r\n        }\r\n    };\r\n\r\n    addPost = async ({ text, localUri }) => {\r\n        //const remoteUri = await this.uploadPhotoAsync(localUri);\r\n        const remoteUri = await this.uploadPhotoAsync(localUri, `photos/${this.uid}/${Date.now()}`);\r\n\r\n        return new Promise((res, rej) => {\r\n            this.firestore\r\n                .collection(\"posts\")\r\n                .add({\r\n                    text,\r\n                    uid: this.uid,\r\n                    name: this.name,\r\n                    timestamp: this.timestamp,\r\n                    image: remoteUri\r\n                })\r\n                .then(ref => {\r\n                    res(ref);\r\n                })\r\n                .catch(error => {\r\n                    rej(error);\r\n                });\r\n        });\r\n    };\r\n\r\n    getPost = async ({ text }) => {\r\n        return new Promise((res, rej) => {\r\n            this.firestore\r\n                .collection(\"posts\")\r\n                .snapshot({\r\n                    text,\r\n                    uid: \"\",\r\n                    name: \"\",\r\n                    timestamp: \"\",\r\n                    image: \"\"\r\n                })\r\n                .then(ref => {\r\n                    res(ref);\r\n                })\r\n                .catch(error => {\r\n                    rej(error);\r\n                });\r\n        });\r\n    };\r\n\r\n}\r\n\r\n\r\nFire.shared = new Fire();\r\nexport default Fire;"],"mappings":"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"},"metadata":{},"sourceType":"module"}